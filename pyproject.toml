[tool.poetry]
name = "jwt-email-auth"
version = "0.1.1"
description = "JWT authentication from email login codes."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "jwt_email_auth" },
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/MrThearMan/jwt-email-auth"
repository = "https://github.com/MrThearMan/jwt-email-auth"
keywords = [
    "django",
    "djangorestframework",
    "drf",
    "email",
    "code",
    "login",
    "jwt",
    "auth",
    "authentication"
]
include = [
    "README.md",
    "LICENSE",
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/jwt-email-auth/issues"


[tool.poetry.dependencies]
python = ">=3.8,<4"
Django = "^3.2.9"
djangorestframework = "^3.12.2"
django-ipware = "^4.0.0"
cryptography = "^36.0.0"
PyJWT = "^2.3.0"

[tool.poetry.dev-dependencies]
# For testing and CI
pytest = "^6.2.5"
coverage = "^6.1.2"
tomli = "^1.2.2"
pytest-django = "^4.4.0"
pre-commit = "^2.13.0"
tox-gh-actions = "^2.7.0"
tox = "^3.24.4"
coveralls = "^3.2.0"
# For documentation
mkdocs = "^1.2.2"
# For code style
flake8 = "^3.9.2"
mypy = "^0.910"
django-stubs = "^1.9.0"
djangorestframework-stubs = "^1.4.0"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = "True"
lines_after_imports = 2

[tool.pylint.MASTER]
ignore-paths = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]

[tool.pylint.messages_control]
disable = "C0330, C0326, C0114, C0115, C0116, R0903, R0913, R1721"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.miscellaneous]
notes = "FIXME,XXX,BUG"

[tool.mypy]
python_version = 3.9
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
]

[tool.django-stubs]
django_settings_module = "tests.django.settings"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38, 39, 310}
isolated_build = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
whitelist_externals =
    poetry
setenv =
    PYTHONPATH = {toxinidir}
commands =
    poetry install
    poetry run coverage run -m pytest -vv -s --log-cli-level=INFO
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"